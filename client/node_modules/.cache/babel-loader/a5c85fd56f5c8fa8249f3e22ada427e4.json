{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documents/GithubRepos/Group_06/client/src/components/DashboardSales.js\";\nimport Chart from \"chart.js\";\nimport React, { useEffect } from \"react\";\nimport { Container, Table } from \"react-bootstrap\";\nconst SALES_DATA = [{\n  month: \"Janurary\",\n  salesVolume: 65,\n  netChange: \"+5\"\n}, {\n  month: \"February\",\n  salesVolume: 59,\n  netChange: \"-6\"\n}, {\n  month: \"March\",\n  salesVolume: 80,\n  netChange: \"+21\"\n}, {\n  month: \"April\",\n  salesVolume: 81,\n  netChange: \"+1\"\n}, {\n  month: \"May\",\n  salesVolume: 56,\n  netChange: \"-25\"\n}, {\n  month: \"June\",\n  salesVolume: 55,\n  netChange: \"-1\"\n}, {\n  month: \"July\",\n  salesVolume: 40,\n  netChange: \"-15\"\n}];\nexport default function DashboardSales() {\n  useEffect(() => {\n    drawChart();\n  }, []);\n\n  function drawChart() {\n    const ctx = document.getElementById(\"monthlySales\");\n    new Chart(ctx, {\n      type: \"line\",\n      data: {\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n        datasets: [{\n          label: \"Monthly Sales\",\n          data: [65, 59, 80, 81, 56, 55, 40],\n          fill: false,\n          borderColor: \"rgb(75, 192, 192)\",\n          lineTension: 0\n        }]\n      },\n      options: {}\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Recent Monthly Sales\"), /*#__PURE__*/React.createElement(\"canvas\", {\n    id: \"monthlySales\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    responsive: true,\n    striped: true,\n    bordered: true,\n    hover: true,\n    size: \"sm\",\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Month\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Total Sales Volume\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Net Change\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, SALES_DATA.map((month, idx) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, month.month), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, month.salesVolume), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, month.netChange));\n  }))));\n}","map":{"version":3,"sources":["/home/andre/Documents/GithubRepos/Group_06/client/src/components/DashboardSales.js"],"names":["Chart","React","useEffect","Container","Table","SALES_DATA","month","salesVolume","netChange","DashboardSales","drawChart","ctx","document","getElementById","type","data","labels","datasets","label","fill","borderColor","lineTension","options","map","idx"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,iBAAjC;AAEA,MAAMC,UAAU,GAAG,CACjB;AACEC,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,WAAW,EAAE,EAFf;AAGEC,EAAAA,SAAS,EAAE;AAHb,CADiB,EAMjB;AACEF,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,WAAW,EAAE,EAFf;AAGEC,EAAAA,SAAS,EAAE;AAHb,CANiB,EAWjB;AACEF,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,WAAW,EAAE,EAFf;AAGEC,EAAAA,SAAS,EAAE;AAHb,CAXiB,EAgBjB;AACEF,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,WAAW,EAAE,EAFf;AAGEC,EAAAA,SAAS,EAAE;AAHb,CAhBiB,EAqBjB;AACEF,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,WAAW,EAAE,EAFf;AAGEC,EAAAA,SAAS,EAAE;AAHb,CArBiB,EA0BjB;AACEF,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,WAAW,EAAE,EAFf;AAGEC,EAAAA,SAAS,EAAE;AAHb,CA1BiB,EA+BjB;AACEF,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,WAAW,EAAE,EAFf;AAGEC,EAAAA,SAAS,EAAE;AAHb,CA/BiB,CAAnB;AAsCA,eAAe,SAASC,cAAT,GAA0B;AACvCP,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,SAAT,GAAqB;AACnB,UAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAZ;AACA,QAAIb,KAAJ,CAAUW,GAAV,EAAe;AACbG,MAAAA,IAAI,EAAE,MADO;AAEbC,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAE,CACN,SADM,EAEN,UAFM,EAGN,OAHM,EAIN,OAJM,EAKN,KALM,EAMN,MANM,EAON,MAPM,CADJ;AAUJC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,eADT;AAEEH,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,CAFR;AAGEI,UAAAA,IAAI,EAAE,KAHR;AAIEC,UAAAA,WAAW,EAAE,mBAJf;AAKEC,UAAAA,WAAW,EAAE;AALf,SADQ;AAVN,OAFO;AAsBbC,MAAAA,OAAO,EAAE;AAtBI,KAAf;AAwBD;;AACD,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAQ,IAAA,EAAE,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,UAAU,MAAjB;AAAkB,IAAA,OAAO,MAAzB;AAA0B,IAAA,QAAQ,MAAlC;AAAmC,IAAA,KAAK,MAAxC;AAAyC,IAAA,IAAI,EAAC,IAA9C;AAAmD,IAAA,SAAS,EAAC,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,UAAU,CAACkB,GAAX,CAAe,CAACjB,KAAD,EAAQkB,GAAR,KAAgB;AAC9B,wBACE;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKlB,KAAK,CAACA,KAAX,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,CAACC,WAAX,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAK,CAACE,SAAX,CAHF,CADF;AAOD,GARA,CADH,CARF,CAHF,CADF;AA0BD","sourcesContent":["import Chart from \"chart.js\";\nimport React, { useEffect } from \"react\";\nimport { Container, Table } from \"react-bootstrap\";\n\nconst SALES_DATA = [\n  {\n    month: \"Janurary\",\n    salesVolume: 65,\n    netChange: \"+5\",\n  },\n  {\n    month: \"February\",\n    salesVolume: 59,\n    netChange: \"-6\",\n  },\n  {\n    month: \"March\",\n    salesVolume: 80,\n    netChange: \"+21\",\n  },\n  {\n    month: \"April\",\n    salesVolume: 81,\n    netChange: \"+1\",\n  },\n  {\n    month: \"May\",\n    salesVolume: 56,\n    netChange: \"-25\",\n  },\n  {\n    month: \"June\",\n    salesVolume: 55,\n    netChange: \"-1\",\n  },\n  {\n    month: \"July\",\n    salesVolume: 40,\n    netChange: \"-15\",\n  },\n];\n\nexport default function DashboardSales() {\n  useEffect(() => {\n    drawChart();\n  }, []);\n\n  function drawChart() {\n    const ctx = document.getElementById(\"monthlySales\");\n    new Chart(ctx, {\n      type: \"line\",\n      data: {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n        ],\n        datasets: [\n          {\n            label: \"Monthly Sales\",\n            data: [65, 59, 80, 81, 56, 55, 40],\n            fill: false,\n            borderColor: \"rgb(75, 192, 192)\",\n            lineTension: 0,\n          },\n        ],\n      },\n      options: {},\n    });\n  }\n  return (\n    <Container>\n      <h2 className=\"text-center\">Recent Monthly Sales</h2>\n      <canvas id=\"monthlySales\"></canvas>\n      <Table responsive striped bordered hover size=\"sm\" className=\"mt-4\">\n        <thead>\n          <tr>\n            <th>Month</th>\n            <th>Total Sales Volume</th>\n            <th>Net Change</th>\n          </tr>\n        </thead>\n        <tbody>\n          {SALES_DATA.map((month, idx) => {\n            return (\n              <tr key={idx}>\n                <td>{month.month}</td>\n                <td>{month.salesVolume}</td>\n                <td>{month.netChange}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}