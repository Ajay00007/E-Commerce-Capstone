{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documents/GithubRepos/Group_06/client/src/contexts/AdminContext.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { APIpaths } from \"../API\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nconst AdminContext = React.createContext();\nexport function useAuth() {\n  return useContext(AdminContext);\n}\nexport function AdminProvider({\n  children\n}) {\n  const [currentAdmin, setCurrentAdmin] = useState();\n  const [loading, setLoading] = useState(true);\n  const [authToken, setAuthToken] = useLocalStorage(\"auth-token\", null);\n\n  async function registerAdmin(name, email, password) {\n    const res = await axios.post(APIpaths.registerUser, {\n      name,\n      email,\n      password\n    });\n    setCurrentAdmin(res.data.user);\n    setAuthToken(res.data.token);\n  }\n\n  async function loginAdmin(email, password) {\n    const res = await axios.post(APIpaths.loginAdmin, {\n      email,\n      password\n    });\n    setCurrentAdmin(res.data.user);\n    setAuthToken(res.data.token);\n  }\n\n  function logout() {\n    setCurrentAdmin(undefined);\n    setAuthToken(null);\n  }\n\n  async function getAdminFromToken(tokenValue) {\n    try {\n      const res = await axios.get(APIpaths.getUser, {\n        headers: {\n          \"x-auth-token\": tokenValue\n        }\n      });\n      setCurrentAdmin(res.data);\n    } catch (error) {\n      return;\n    }\n  }\n\n  async function updateEmail(email) {\n    const data = {\n      email\n    };\n    const config = {\n      headers: {\n        \"x-auth-token\": authToken\n      }\n    };\n    const res = await axios.put(APIpaths.updateEmail, data, config);\n    setCurrentAdmin(res.data);\n  }\n\n  async function updatePassword(password) {\n    const data = {\n      password\n    };\n    const config = {\n      headers: {\n        \"x-auth-token\": authToken\n      }\n    };\n    await axios.put(APIpaths.updatePass, data, config);\n  }\n\n  async function updateProduct(productData, productId) {\n    const config = {\n      headers: {\n        \"x-auth-token\": authToken\n      }\n    };\n    await axios.patch(APIpaths.updateItem + productId, productData, config);\n  }\n\n  useEffect(() => {\n    if (!currentAdmin && authToken !== null) getAdminFromToken(authToken);\n    setCurrentAdmin(currentAdmin);\n    setLoading(false);\n  }, [authToken, currentAdmin]);\n  const value = {\n    currentAdmin,\n    registerAdmin,\n    loginAdmin,\n    logout,\n    updateEmail,\n    updatePassword,\n    updateProduct\n  };\n  return /*#__PURE__*/React.createElement(AdminContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, !loading && children);\n}","map":{"version":3,"sources":["/home/andre/Documents/GithubRepos/Group_06/client/src/contexts/AdminContext.js"],"names":["React","useContext","useEffect","useState","axios","APIpaths","useLocalStorage","AdminContext","createContext","useAuth","AdminProvider","children","currentAdmin","setCurrentAdmin","loading","setLoading","authToken","setAuthToken","registerAdmin","name","email","password","res","post","registerUser","data","user","token","loginAdmin","logout","undefined","getAdminFromToken","tokenValue","get","getUser","headers","error","updateEmail","config","put","updatePassword","updatePass","updateProduct","productData","productId","patch","updateItem","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { APIpaths } from \"../API\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\nconst AdminContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AdminContext);\n}\n\nexport function AdminProvider({ children }) {\n  const [currentAdmin, setCurrentAdmin] = useState();\n  const [loading, setLoading] = useState(true);\n\n  const [authToken, setAuthToken] = useLocalStorage(\"auth-token\", null);\n\n  async function registerAdmin(name, email, password) {\n    const res = await axios.post(APIpaths.registerUser, {\n      name,\n      email,\n      password,\n    });\n\n    setCurrentAdmin(res.data.user);\n    setAuthToken(res.data.token);\n  }\n\n  async function loginAdmin(email, password) {\n    const res = await axios.post(APIpaths.loginAdmin, {\n      email,\n      password,\n    });\n    setCurrentAdmin(res.data.user);\n    setAuthToken(res.data.token);\n  }\n\n  function logout() {\n    setCurrentAdmin(undefined);\n    setAuthToken(null);\n  }\n\n  async function getAdminFromToken(tokenValue) {\n    try {\n      const res = await axios.get(APIpaths.getUser, {\n        headers: { \"x-auth-token\": tokenValue },\n      });\n      setCurrentAdmin(res.data);\n    } catch (error) {\n      return;\n    }\n  }\n\n  async function updateEmail(email) {\n    const data = { email };\n    const config = { headers: { \"x-auth-token\": authToken } };\n\n    const res = await axios.put(APIpaths.updateEmail, data, config);\n\n    setCurrentAdmin(res.data);\n  }\n\n  async function updatePassword(password) {\n    const data = { password };\n    const config = { headers: { \"x-auth-token\": authToken } };\n\n    await axios.put(APIpaths.updatePass, data, config);\n  }\n\n  async function updateProduct(productData, productId) {\n    const config = { headers: { \"x-auth-token\": authToken } };\n\n    await axios.patch(APIpaths.updateItem + productId, productData, config);\n  }\n\n  useEffect(() => {\n    if (!currentAdmin && authToken !== null) getAdminFromToken(authToken);\n    setCurrentAdmin(currentAdmin);\n    setLoading(false);\n  }, [authToken, currentAdmin]);\n\n  const value = {\n    currentAdmin,\n    registerAdmin,\n    loginAdmin,\n    logout,\n    updateEmail,\n    updatePassword,\n    updateProduct,\n  };\n\n  return (\n    <AdminContext.Provider value={value}>\n      {!loading && children}\n    </AdminContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}