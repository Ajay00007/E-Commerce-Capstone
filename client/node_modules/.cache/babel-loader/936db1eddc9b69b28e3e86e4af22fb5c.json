{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documents/GithubRepos/Group_06/client/src/components/DashboardSummary.js\";\nimport Chart from \"chart.js\";\nimport React, { useEffect } from \"react\";\nimport { Container, Table } from \"react-bootstrap\";\nexport default function DashboardSummary() {\n  useEffect(() => {\n    drawChart();\n  }, []);\n\n  function drawChart() {\n    const ctx = document.getElementById(\"myChart\");\n    new Chart(ctx, {\n      type: \"bar\",\n      data: {\n        labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\n        datasets: [{\n          label: \"# of Votes\",\n          data: [12, 19, 3, 5, 2, 3],\n          backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(255, 159, 64, 0.2)\"],\n          borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\"],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    });\n  }\n\n  function createConfig(details, data) {\n    return {\n      type: \"line\",\n      data: {\n        labels: [\"Day 1\", \"Day 2\", \"Day 3\", \"Day 4\", \"Day 5\", \"Day 6\"],\n        datasets: [{\n          label: \"steppedLine: \" + details.steppedLine,\n          steppedLine: details.steppedLine,\n          data: data,\n          borderColor: details.color,\n          fill: false\n        }]\n      },\n      options: {\n        responsive: true,\n        title: {\n          display: true,\n          text: details.label\n        }\n      }\n    };\n  }\n\n  window.onload = function () {\n    var container = document.querySelector(\".container\");\n    var data = [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()];\n    var steppedLineSettings = [{\n      steppedLine: false,\n      label: \"No Step Interpolation\",\n      color: window.chartColors.red\n    }, {\n      steppedLine: true,\n      label: \"Step Before Interpolation\",\n      color: window.chartColors.green\n    }, {\n      steppedLine: \"before\",\n      label: \"Step Before Interpolation\",\n      color: window.chartColors.green\n    }, {\n      steppedLine: \"after\",\n      label: \"Step After Interpolation\",\n      color: window.chartColors.purple\n    }, {\n      steppedLine: \"middle\",\n      label: \"Step Middle Interpolation\",\n      color: window.chartColors.blue\n    }];\n    steppedLineSettings.forEach(function (details) {\n      var div = document.createElement(\"div\");\n      div.classList.add(\"chart-container\");\n      var canvas = document.createElement(\"canvas\");\n      div.appendChild(canvas);\n      container.appendChild(div);\n      var ctx = canvas.getContext(\"2d\");\n      var config = createConfig(details, data);\n      new Chart(ctx, config);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    id: \"myChart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, \"Username\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"1\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, \"Mark\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, \"Otto\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, \"@mdo\")), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, \"2\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, \"Jacob\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, \"Thornton\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, \"@fat\")), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, \"3\"), /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, \"Larry the Bird\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, \"@twitter\"))))));\n}","map":{"version":3,"sources":["/home/andre/Documents/GithubRepos/Group_06/client/src/components/DashboardSummary.js"],"names":["Chart","React","useEffect","Container","Table","DashboardSummary","drawChart","ctx","document","getElementById","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","createConfig","details","steppedLine","color","fill","responsive","title","display","text","window","onload","container","querySelector","randomScalingFactor","steppedLineSettings","chartColors","red","green","purple","blue","forEach","div","createElement","classList","add","canvas","appendChild","getContext","config"],"mappings":"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","sourcesContent":["import Chart from \"chart.js\";\nimport React, { useEffect } from \"react\";\nimport { Container, Table } from \"react-bootstrap\";\n\nexport default function DashboardSummary() {\n  useEffect(() => {\n    drawChart();\n  }, []);\n\n  function drawChart() {\n    const ctx = document.getElementById(\"myChart\");\n    new Chart(ctx, {\n      type: \"bar\",\n      data: {\n        labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\n        datasets: [\n          {\n            label: \"# of Votes\",\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: [\n              \"rgba(255, 99, 132, 0.2)\",\n              \"rgba(54, 162, 235, 0.2)\",\n              \"rgba(255, 206, 86, 0.2)\",\n              \"rgba(75, 192, 192, 0.2)\",\n              \"rgba(153, 102, 255, 0.2)\",\n              \"rgba(255, 159, 64, 0.2)\",\n            ],\n            borderColor: [\n              \"rgba(255, 99, 132, 1)\",\n              \"rgba(54, 162, 235, 1)\",\n              \"rgba(255, 206, 86, 1)\",\n              \"rgba(75, 192, 192, 1)\",\n              \"rgba(153, 102, 255, 1)\",\n              \"rgba(255, 159, 64, 1)\",\n            ],\n            borderWidth: 1,\n          },\n        ],\n      },\n      options: {\n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n              },\n            },\n          ],\n        },\n      },\n    });\n  }\n\n  function createConfig(details, data) {\n    return {\n      type: \"line\",\n      data: {\n        labels: [\"Day 1\", \"Day 2\", \"Day 3\", \"Day 4\", \"Day 5\", \"Day 6\"],\n        datasets: [\n          {\n            label: \"steppedLine: \" + details.steppedLine,\n            steppedLine: details.steppedLine,\n            data: data,\n            borderColor: details.color,\n            fill: false,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        title: {\n          display: true,\n          text: details.label,\n        },\n      },\n    };\n  }\n\n  window.onload = function () {\n    var container = document.querySelector(\".container\");\n\n    var data = [\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n    ];\n\n    var steppedLineSettings = [\n      {\n        steppedLine: false,\n        label: \"No Step Interpolation\",\n        color: window.chartColors.red,\n      },\n      {\n        steppedLine: true,\n        label: \"Step Before Interpolation\",\n        color: window.chartColors.green,\n      },\n      {\n        steppedLine: \"before\",\n        label: \"Step Before Interpolation\",\n        color: window.chartColors.green,\n      },\n      {\n        steppedLine: \"after\",\n        label: \"Step After Interpolation\",\n        color: window.chartColors.purple,\n      },\n      {\n        steppedLine: \"middle\",\n        label: \"Step Middle Interpolation\",\n        color: window.chartColors.blue,\n      },\n    ];\n\n    steppedLineSettings.forEach(function (details) {\n      var div = document.createElement(\"div\");\n      div.classList.add(\"chart-container\");\n\n      var canvas = document.createElement(\"canvas\");\n      div.appendChild(canvas);\n      container.appendChild(div);\n\n      var ctx = canvas.getContext(\"2d\");\n      var config = createConfig(details, data);\n      new Chart(ctx, config);\n    });\n  };\n\n  return (\n    <>\n      <Container>\n        <canvas id=\"myChart\"></canvas>\n      </Container>\n      <Container>\n        <Table striped bordered hover size=\"sm\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th>Username</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>1</td>\n              <td>Mark</td>\n              <td>Otto</td>\n              <td>@mdo</td>\n            </tr>\n            <tr>\n              <td>2</td>\n              <td>Jacob</td>\n              <td>Thornton</td>\n              <td>@fat</td>\n            </tr>\n            <tr>\n              <td>3</td>\n              <td colSpan=\"2\">Larry the Bird</td>\n              <td>@twitter</td>\n            </tr>\n          </tbody>\n        </Table>\n      </Container>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}