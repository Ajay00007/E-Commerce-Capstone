{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documents/GithubRepos/Group_06/client/src/components/UpdateAccount.js\";\nimport React, { useState } from \"react\";\nimport { useRef } from \"react\";\nimport { Alert, Button, Card, Form } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nexport default function UpdateAccount() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmedRef = useRef();\n  const streetRef = useRef();\n  const cityRef = useRef();\n  const provinceRef = useRef();\n  const postalCodeRef = useRef();\n  const [error, setError] = useState(\"\");\n  const {\n    currentUser,\n    updatePassword,\n    updateEmail\n  } = useAuth();\n  const history = useHistory();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmedRef.current.value) {\n      return setError(\"Passwords do not match.\");\n    }\n\n    const promises = [];\n    setError(\"\");\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value));\n    }\n\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value));\n    }\n\n    let address = {};\n\n    if (streetRef.current.value !== currentUser.address.street) {\n      address.street = streetRef.current.value;\n    }\n\n    if (cityRef.current.value !== currentUser.address.city) {\n      address.city = cityRef.current.value;\n    }\n\n    if (provinceRef.current.value !== currentUser.address.province) {\n      address.province = provinceRef.current.value;\n    }\n\n    if (postalCodeRef.current.value !== currentUser.address.postalCode) {\n      address.postalCode = postalCodeRef.current.value;\n    }\n\n    if (Object.keys(address).length > 0) {\n      promises.push(updateGeneral(address));\n    }\n\n    Promise.all(promises).then(() => history.push(\"/\")).catch(() => {\n      setError(\"Failed to update account.\");\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Update Profile\"), error && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, error), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    ref: emailRef,\n    required: true,\n    defaultValue: currentUser.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    ref: passwordRef,\n    placeholder: \"Leave blank to keep the same\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"passwordConfirm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"Password Confirmation\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    ref: passwordConfirmedRef,\n    placeholder: \"Leave blank to keep the same\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"street\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \"Street Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    defaultValue: currentUser.address.street,\n    ref: streetRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Form.Control, {\n    defaultValue: currentUser.address.city,\n    ref: cityRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"province\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, \"Province\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    defaultValue: currentUser.address.province,\n    ref: provinceRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, \"Choose...\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, \"Alberta\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, \"British Coloumbia\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"Manitoba\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, \"New Brunswick\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \"Newfoundland and Labrador\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, \"Nova Scotia\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, \"Ontario\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Prince Edward Island\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, \"Quebec\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, \"Saskatechewan\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, \"Northwest Territories\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, \"Nunavut\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, \"Yukon\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"postalCode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, \"Postal Code\"), /*#__PURE__*/React.createElement(Form.Control, {\n    defaultValue: currentUser.address.postalCode,\n    ref: postalCodeRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"mr-1\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    as: Link,\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"Cancel\")))));\n}","map":{"version":3,"sources":["/home/andre/Documents/GithubRepos/Group_06/client/src/components/UpdateAccount.js"],"names":["React","useState","useRef","Alert","Button","Card","Form","Link","useHistory","useAuth","UpdateAccount","emailRef","passwordRef","passwordConfirmedRef","streetRef","cityRef","provinceRef","postalCodeRef","error","setError","currentUser","updatePassword","updateEmail","history","handleSubmit","e","preventDefault","current","value","promises","email","push","address","street","city","province","postalCode","Object","keys","length","updateGeneral","Promise","all","then","catch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useRef } from \"react\";\nimport { Alert, Button, Card, Form } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\nexport default function UpdateAccount() {\n  const emailRef = useRef();\n\n  const passwordRef = useRef();\n  const passwordConfirmedRef = useRef();\n\n  const streetRef = useRef();\n  const cityRef = useRef();\n  const provinceRef = useRef();\n  const postalCodeRef = useRef();\n\n  const [error, setError] = useState(\"\");\n\n  const { currentUser, updatePassword, updateEmail } = useAuth();\n  const history = useHistory();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (passwordRef.current.value !== passwordConfirmedRef.current.value) {\n      return setError(\"Passwords do not match.\");\n    }\n\n    const promises = [];\n\n    setError(\"\");\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value));\n    }\n\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value));\n    }\n\n    let address = {};\n\n    if (streetRef.current.value !== currentUser.address.street) {\n      address.street = streetRef.current.value;\n    }\n\n    if (cityRef.current.value !== currentUser.address.city) {\n      address.city = cityRef.current.value;\n    }\n\n    if (provinceRef.current.value !== currentUser.address.province) {\n      address.province = provinceRef.current.value;\n    }\n\n    if (postalCodeRef.current.value !== currentUser.address.postalCode) {\n      address.postalCode = postalCodeRef.current.value;\n    }\n\n    if (Object.keys(address).length > 0) {\n      promises.push(updateGeneral(address));\n    }\n\n    Promise.all(promises)\n      .then(() => history.push(\"/\"))\n      .catch(() => {\n        setError(\"Failed to update account.\");\n      });\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                ref={emailRef}\n                required\n                defaultValue={currentUser.email}\n              />\n            </Form.Group>\n\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n\n            <Form.Group id=\"passwordConfirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordConfirmedRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n\n            <hr />\n\n            <Form.Group id=\"street\">\n              <Form.Label>Street Address</Form.Label>\n              <Form.Control\n                defaultValue={currentUser.address.street}\n                ref={streetRef}\n              />\n            </Form.Group>\n\n            <Form.Group id=\"city\">\n              <Form.Label>City</Form.Label>\n              <Form.Control\n                defaultValue={currentUser.address.city}\n                ref={cityRef}\n              />\n            </Form.Group>\n\n            <Form.Group id=\"province\">\n              <Form.Label>Province</Form.Label>\n              <Form.Control\n                as=\"select\"\n                defaultValue={currentUser.address.province}\n                ref={provinceRef}\n              >\n                <option disabled>Choose...</option>\n                <option>Alberta</option>\n                <option>British Coloumbia</option>\n                <option>Manitoba</option>\n                <option>New Brunswick</option>\n                <option>Newfoundland and Labrador</option>\n                <option>Nova Scotia</option>\n                <option>Ontario</option>\n                <option>Prince Edward Island</option>\n                <option>Quebec</option>\n                <option>Saskatechewan</option>\n                <option>Northwest Territories</option>\n                <option>Nunavut</option>\n                <option>Yukon</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group id=\"postalCode\">\n              <Form.Label>Postal Code</Form.Label>\n              <Form.Control\n                defaultValue={currentUser.address.postalCode}\n                ref={postalCodeRef}\n              />\n            </Form.Group>\n\n            <Button className=\"mr-1\" type=\"submit\">\n              Update\n            </Button>\n            <Button variant=\"secondary\" as={Link} to=\"/\">\n              Cancel\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}