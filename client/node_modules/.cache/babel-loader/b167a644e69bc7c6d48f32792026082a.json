{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documents/GithubRepos/Group_06/client/src/components/PaginationNav.js\";\nimport React from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nexport default function PaginationNav({\n  totalPages,\n  prevPage,\n  nextPage,\n  currentPage,\n  handleGetNextPage,\n  handleGetPreviousPage,\n  handleGoToPage\n}) {\n  const pages = [...Array(totalPages).keys()].map(idx => idx + 1);\n  return /*#__PURE__*/React.createElement(Pagination, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Pagination.First, {\n    onClick: () => handleGoToPage(1),\n    disabled: currentPage === 1 ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Pagination.Prev, {\n    onClick: () => handleGetPreviousPage(),\n    disabled: prevPage === null ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), totalPages >= 5 && currentPage <= totalPages - 5 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Pagination.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, currentPage - 2), /*#__PURE__*/React.createElement(Pagination.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, currentPage - 1), /*#__PURE__*/React.createElement(Pagination.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, currentPage), /*#__PURE__*/React.createElement(Pagination.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, currentPage + 1), /*#__PURE__*/React.createElement(Pagination.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, currentPage + 2)) : null, /*#__PURE__*/React.createElement(Pagination.Next, {\n    onClick: () => handleGetNextPage(),\n    disabled: nextPage === null ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Pagination.Last, {\n    onClick: () => handleGoToPage(totalPages),\n    disabled: currentPage === totalPages ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/andre/Documents/GithubRepos/Group_06/client/src/components/PaginationNav.js"],"names":["React","Pagination","PaginationNav","totalPages","prevPage","nextPage","currentPage","handleGetNextPage","handleGetPreviousPage","handleGoToPage","pages","Array","keys","map","idx"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAEA,eAAe,SAASC,aAAT,CAAuB;AACpCC,EAAAA,UADoC;AAEpCC,EAAAA,QAFoC;AAGpCC,EAAAA,QAHoC;AAIpCC,EAAAA,WAJoC;AAKpCC,EAAAA,iBALoC;AAMpCC,EAAAA,qBANoC;AAOpCC,EAAAA;AAPoC,CAAvB,EAQZ;AACD,QAAMC,KAAK,GAAG,CAAC,GAAGC,KAAK,CAACR,UAAD,CAAL,CAAkBS,IAAlB,EAAJ,EAA8BC,GAA9B,CAAmCC,GAAD,IAASA,GAAG,GAAG,CAAjD,CAAd;AAEA,sBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD,CAAY,KAAZ;AACE,IAAA,OAAO,EAAE,MAAML,cAAc,CAAC,CAAD,CAD/B;AAEE,IAAA,QAAQ,EAAEH,WAAW,KAAK,CAAhB,GAAoB,IAApB,GAA2B,KAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE,oBAAC,UAAD,CAAY,IAAZ;AACE,IAAA,OAAO,EAAE,MAAME,qBAAqB,EADtC;AAEE,IAAA,QAAQ,EAAEJ,QAAQ,KAAK,IAAb,GAAoB,IAApB,GAA2B,KAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAUGD,UAAU,IAAI,CAAd,IAAmBG,WAAW,IAAIH,UAAU,GAAG,CAA/C,gBACC,uDACE,oBAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBG,WAAW,GAAG,CAAhC,CADF,eAEE,oBAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBA,WAAW,GAAG,CAAhC,CAFF,eAGE,oBAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBA,WAAlB,CAHF,eAIE,oBAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBA,WAAW,GAAG,CAAhC,CAJF,eAKE,oBAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBA,WAAW,GAAG,CAAhC,CALF,CADD,GAQG,IAlBN,eAgCE,oBAAC,UAAD,CAAY,IAAZ;AACE,IAAA,OAAO,EAAE,MAAMC,iBAAiB,EADlC;AAEE,IAAA,QAAQ,EAAEF,QAAQ,KAAK,IAAb,GAAoB,IAApB,GAA2B,KAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCF,eAoCE,oBAAC,UAAD,CAAY,IAAZ;AACE,IAAA,OAAO,EAAE,MAAMI,cAAc,CAACN,UAAD,CAD/B;AAEE,IAAA,QAAQ,EAAEG,WAAW,KAAKH,UAAhB,GAA6B,IAA7B,GAAoC,KAFhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCF,CADF;AA2CD","sourcesContent":["import React from \"react\";\nimport { Pagination } from \"react-bootstrap\";\n\nexport default function PaginationNav({\n  totalPages,\n  prevPage,\n  nextPage,\n  currentPage,\n  handleGetNextPage,\n  handleGetPreviousPage,\n  handleGoToPage,\n}) {\n  const pages = [...Array(totalPages).keys()].map((idx) => idx + 1);\n\n  return (\n    <Pagination>\n      <Pagination.First\n        onClick={() => handleGoToPage(1)}\n        disabled={currentPage === 1 ? true : false}\n      />\n      <Pagination.Prev\n        onClick={() => handleGetPreviousPage()}\n        disabled={prevPage === null ? true : false}\n      />\n\n      {totalPages >= 5 && currentPage <= totalPages - 5 ? (\n        <>\n          <Pagination.Item>{currentPage - 2}</Pagination.Item>\n          <Pagination.Item>{currentPage - 1}</Pagination.Item>\n          <Pagination.Item>{currentPage}</Pagination.Item>\n          <Pagination.Item>{currentPage + 1}</Pagination.Item>\n          <Pagination.Item>{currentPage + 2}</Pagination.Item>\n        </>\n      ) : null}\n\n      {/* {pages.map((page) => {\n        return (\n          <Pagination.Item\n            key={page}\n            onClick={() => handleGoToPage(page)}\n            active={page === currentPage ? true : false}\n          >\n            {page}\n          </Pagination.Item>\n        );\n      })} */}\n\n      <Pagination.Next\n        onClick={() => handleGetNextPage()}\n        disabled={nextPage === null ? true : false}\n      />\n      <Pagination.Last\n        onClick={() => handleGoToPage(totalPages)}\n        disabled={currentPage === totalPages ? true : false}\n      />\n    </Pagination>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}