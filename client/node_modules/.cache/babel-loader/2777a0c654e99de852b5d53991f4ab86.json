{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documents/GithubRepos/Group_06/client/src/pages/Inventory.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Card, Col, Container, ListGroup, Row } from \"react-bootstrap\";\nimport { APIpaths } from \"../API\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport PaginationNav from \"../components/PaginationNav\";\nexport default function Inventory() {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [lastPage, setLastPage] = useState(null);\n  const [nextPage, setNextPage] = useState(null);\n  const [prevPage, setPrevPage] = useState(null);\n  const [products, setProducts] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    axios.get(`${APIpaths.getAllItems}`).then(res => {\n      setProducts(res.data);\n\n      if (res.data.next) {\n        setNextPage(res.data.next.page);\n      } else {\n        setNextPage(null);\n      }\n\n      if (res.data.previous) {\n        setPrevPage(res.data.previous.page);\n      } else {\n        setPrevPage(null);\n      }\n\n      if (res.data.total) {\n        setLastPage(res.data.total.pages);\n      }\n\n      setLoading(false);\n    }).catch(err => console.log(err));\n  }, []);\n  useEffect(() => {\n    setLoading(true);\n    axios.get(`${APIpaths.getAllItems}?page=${currentPage.toString()}&limit=10`).then(res => {\n      setProducts(res.data);\n\n      if (res.data.next) {\n        setNextPage(res.data.next.page);\n      } else {\n        setNextPage(null);\n      }\n\n      if (res.data.previous) {\n        setPrevPage(res.data.previous.page);\n      } else {\n        setPrevPage(null);\n      }\n\n      setLoading(false);\n    }).catch(err => console.log(err));\n  }, [currentPage]);\n\n  async function handleGetData(pageToGet = 1) {\n    const results = await axios.get(`${APIpaths.getAllItems}?page=${pageToGet.toString()}&limit=10`);\n    setProducts(results.data);\n\n    if (results.data.next) {\n      setNextPage(results.data.next.page);\n    } else {\n      setNextPage(null);\n    }\n\n    if (results.data.previous) {\n      setPrevPage(results.data.previous.page);\n    } else {\n      setPrevPage(null);\n    }\n  }\n\n  function handleGetNextPage() {\n    if (nextPage !== null) {\n      setCurrentPage(nextPage);\n    } else {\n      return;\n    }\n  }\n\n  function handleGetPreviousPage() {\n    if (prevPage !== null) {\n      setCurrentPage(prevPage);\n    } else {\n      return;\n    }\n  }\n\n  function handleGoToPage(pageNum) {\n    if (currentPage <= lastPage && pageNum > 0) {\n      setCurrentPage(pageNum);\n    } else {\n      return;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"min-vh-100 mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, \"Inventory page\"), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Loading...\") : products !== null ? products.results.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      src: item.picture,\n      alt: \"\",\n      loading: \"lazy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, item.productName), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, item.manufacturer), /*#__PURE__*/React.createElement(ListGroup, {\n      variant: \"flush\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 23\n      }\n    }, \"Rating: \", item.rating), /*#__PURE__*/React.createElement(ListGroup.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 23\n      }\n    }, \"Price: $\", item.price.toFixed(2))), /*#__PURE__*/React.createElement(Link, {\n      to: `/product/${item._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, \"View\")));\n  }) : /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, \"No content to display.\")))), /*#__PURE__*/React.createElement(PaginationNav, {\n    firstPage: 1,\n    lastPage: lastPage,\n    prevPage: prevPage,\n    nextPage: nextPage,\n    currentPage: currentPage,\n    handleGetNextPage: handleGetNextPage,\n    handleGetPreviousPage: handleGetPreviousPage,\n    handleGoToPage: handleGoToPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/andre/Documents/GithubRepos/Group_06/client/src/pages/Inventory.js"],"names":["React","useEffect","useState","Card","Col","Container","ListGroup","Row","APIpaths","axios","Link","PaginationNav","Inventory","currentPage","setCurrentPage","lastPage","setLastPage","nextPage","setNextPage","prevPage","setPrevPage","products","setProducts","loading","setLoading","get","getAllItems","then","res","data","next","page","previous","total","pages","catch","err","console","log","toString","handleGetData","pageToGet","results","handleGetNextPage","handleGetPreviousPage","handleGoToPage","pageNum","map","item","index","picture","productName","manufacturer","rating","price","toFixed","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Card, Col, Container, ListGroup, Row } from \"react-bootstrap\";\nimport { APIpaths } from \"../API\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport PaginationNav from \"../components/PaginationNav\";\n\nexport default function Inventory() {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [lastPage, setLastPage] = useState(null);\n  const [nextPage, setNextPage] = useState(null);\n  const [prevPage, setPrevPage] = useState(null);\n\n  const [products, setProducts] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    axios\n      .get(`${APIpaths.getAllItems}`)\n      .then((res) => {\n        setProducts(res.data);\n\n        if (res.data.next) {\n          setNextPage(res.data.next.page);\n        } else {\n          setNextPage(null);\n        }\n\n        if (res.data.previous) {\n          setPrevPage(res.data.previous.page);\n        } else {\n          setPrevPage(null);\n        }\n\n        if (res.data.total) {\n          setLastPage(res.data.total.pages);\n        }\n\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  useEffect(() => {\n    setLoading(true);\n    axios\n      .get(`${APIpaths.getAllItems}?page=${currentPage.toString()}&limit=10`)\n      .then((res) => {\n        setProducts(res.data);\n\n        if (res.data.next) {\n          setNextPage(res.data.next.page);\n        } else {\n          setNextPage(null);\n        }\n\n        if (res.data.previous) {\n          setPrevPage(res.data.previous.page);\n        } else {\n          setPrevPage(null);\n        }\n\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, [currentPage]);\n\n  async function handleGetData(pageToGet = 1) {\n    const results = await axios.get(\n      `${APIpaths.getAllItems}?page=${pageToGet.toString()}&limit=10`\n    );\n\n    setProducts(results.data);\n\n    if (results.data.next) {\n      setNextPage(results.data.next.page);\n    } else {\n      setNextPage(null);\n    }\n\n    if (results.data.previous) {\n      setPrevPage(results.data.previous.page);\n    } else {\n      setPrevPage(null);\n    }\n  }\n\n  function handleGetNextPage() {\n    if (nextPage !== null) {\n      setCurrentPage(nextPage);\n    } else {\n      return;\n    }\n  }\n\n  function handleGetPreviousPage() {\n    if (prevPage !== null) {\n      setCurrentPage(prevPage);\n    } else {\n      return;\n    }\n  }\n\n  function handleGoToPage(pageNum) {\n    if (currentPage <= lastPage && pageNum > 0) {\n      setCurrentPage(pageNum);\n    } else {\n      return;\n    }\n  }\n\n  return (\n    <Container className=\"min-vh-100 mt-5\">\n      <h1>Inventory page</h1>\n\n      <Container>\n        <Row>\n          {loading ? (\n            <p>Loading...</p>\n          ) : products !== null ? (\n            products.results.map((item, index) => {\n              return (\n                <Card key={index}>\n                  <Card.Img src={item.picture} alt=\"\" loading=\"lazy\" />\n                  <Card.Body>\n                    <Card.Title>{item.productName}</Card.Title>\n                    <Card.Subtitle>{item.manufacturer}</Card.Subtitle>\n                    <ListGroup variant=\"flush\">\n                      <ListGroup.Item>Rating: {item.rating}</ListGroup.Item>\n                      <ListGroup.Item>\n                        Price: ${item.price.toFixed(2)}\n                      </ListGroup.Item>\n                    </ListGroup>\n                    <Link to={`/product/${item._id}`}>View</Link>\n                  </Card.Body>\n                </Card>\n              );\n            })\n          ) : (\n            <Col>\n              <p>No content to display.</p>\n            </Col>\n          )}\n        </Row>\n      </Container>\n\n      <PaginationNav\n        firstPage={1}\n        lastPage={lastPage}\n        prevPage={prevPage}\n        nextPage={nextPage}\n        currentPage={currentPage}\n        handleGetNextPage={handleGetNextPage}\n        handleGetPreviousPage={handleGetPreviousPage}\n        handleGoToPage={handleGoToPage}\n      />\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}