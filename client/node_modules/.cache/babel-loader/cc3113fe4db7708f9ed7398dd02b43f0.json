{"ast":null,"code":"import _regeneratorRuntime from\"/home/andre/Documents/GithubRepos/Group_06/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/andre/Documents/GithubRepos/Group_06/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/andre/Documents/GithubRepos/Group_06/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{useState}from\"react\";import{useRef}from\"react\";import{Alert,Button,Container,Form}from\"react-bootstrap\";import{Link,useHistory}from\"react-router-dom\";import{useAuth}from\"../contexts/AuthContext\";export default function Register(){var nameRef=useRef();var emailRef=useRef();var passwordRef=useRef();var passwordConfirmRef=useRef();var streetRef=useRef();var cityRef=useRef();var provinceRef=useRef();var postalCodeRef=useRef();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var _useAuth=useAuth(),register=_useAuth.register;var history=useHistory();function handleSubmit(_x){return _handleSubmit.apply(this,arguments);}function _handleSubmit(){_handleSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(!(passwordRef.current.value!==passwordConfirmRef.current.value)){_context.next=3;break;}return _context.abrupt(\"return\",setError(\"Passowrds do not match.\"));case 3:_context.prev=3;setError(\"\");_context.next=7;return register(nameRef.current.value,emailRef.current.value,passwordRef.current.value,streetRef.current.value,cityRef.current.value,provinceRef.current.value,postalCodeRef.current.value);case 7:history.push(\"/\");_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](3);setError(\"Failed to create account.\");case 13:case\"end\":return _context.stop();}}},_callee,null,[[3,10]]);}));return _handleSubmit.apply(this,arguments);}return/*#__PURE__*/React.createElement(Container,{className:\"min-vh-100 mt-5\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Register\"),error&&/*#__PURE__*/React.createElement(Alert,{variant:\"danger\"},error),/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formRegisterName\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Name\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"Enter your name\",ref:nameRef,required:true})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formRegisterEmail\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Email address\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"email\",placeholder:\"Enter email\",ref:emailRef,required:true})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formRegisterPassword1\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Password\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",placeholder:\"Password\",ref:passwordRef,required:true})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formRegisterPassword2\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Re-enter Password\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",placeholder:\"Password\",required:true,ref:passwordConfirmRef})),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(Form.Group,{id:\"street\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Street Address\"),/*#__PURE__*/React.createElement(Form.Control,{placeholder:\"123 Main St.\",ref:streetRef,required:true})),/*#__PURE__*/React.createElement(Form.Group,{id:\"city\"},/*#__PURE__*/React.createElement(Form.Label,null,\"City\"),/*#__PURE__*/React.createElement(Form.Control,{placeholder:\"Somewhere\",ref:cityRef,required:true})),/*#__PURE__*/React.createElement(Form.Group,{id:\"province\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Province\"),/*#__PURE__*/React.createElement(Form.Control,{as:\"select\",defaultValue:\"Choose...\",ref:provinceRef,required:true},/*#__PURE__*/React.createElement(\"option\",{disabled:true},\"Choose...\"),/*#__PURE__*/React.createElement(\"option\",null,\"Alberta\"),/*#__PURE__*/React.createElement(\"option\",null,\"British Coloumbia\"),/*#__PURE__*/React.createElement(\"option\",null,\"Manitoba\"),/*#__PURE__*/React.createElement(\"option\",null,\"New Brunswick\"),/*#__PURE__*/React.createElement(\"option\",null,\"Newfoundland and Labrador\"),/*#__PURE__*/React.createElement(\"option\",null,\"Nova Scotia\"),/*#__PURE__*/React.createElement(\"option\",null,\"Ontario\"),/*#__PURE__*/React.createElement(\"option\",null,\"Prince Edward Island\"),/*#__PURE__*/React.createElement(\"option\",null,\"Quebec\"),/*#__PURE__*/React.createElement(\"option\",null,\"Saskatechewan\"),/*#__PURE__*/React.createElement(\"option\",null,\"Northwest Territories\"),/*#__PURE__*/React.createElement(\"option\",null,\"Nunavut\"),/*#__PURE__*/React.createElement(\"option\",null,\"Yukon\"))),/*#__PURE__*/React.createElement(Form.Group,{id:\"postalCode\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Postal Code\"),/*#__PURE__*/React.createElement(Form.Control,{placeholder:\"A1B 2C3\",ref:postalCodeRef,required:true})),/*#__PURE__*/React.createElement(Button,{variant:\"primary\",type:\"submit\"},\"Submit\")),/*#__PURE__*/React.createElement(\"div\",{className:\"div mt-2\"},\"Already have an account? \",/*#__PURE__*/React.createElement(Link,{to:\"/login\"},\"Login.\")));}","map":{"version":3,"sources":["/home/andre/Documents/GithubRepos/Group_06/client/src/pages/Register.js"],"names":["React","useState","useRef","Alert","Button","Container","Form","Link","useHistory","useAuth","Register","nameRef","emailRef","passwordRef","passwordConfirmRef","streetRef","cityRef","provinceRef","postalCodeRef","error","setError","register","history","handleSubmit","e","preventDefault","current","value","push"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { useRef } from \"react\";\nimport { Alert, Button, Container, Form } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\nexport default function Register() {\n  const nameRef = useRef();\n\n  const emailRef = useRef();\n\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n\n  const streetRef = useRef();\n  const cityRef = useRef();\n  const provinceRef = useRef();\n  const postalCodeRef = useRef();\n\n  const [error, setError] = useState(\"\");\n\n  const { register } = useAuth();\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passowrds do not match.\");\n    }\n\n    try {\n      setError(\"\");\n\n      await register(\n        nameRef.current.value,\n        emailRef.current.value,\n        passwordRef.current.value,\n        streetRef.current.value,\n        cityRef.current.value,\n        provinceRef.current.value,\n        postalCodeRef.current.value\n      );\n      history.push(\"/\");\n    } catch (error) {\n      setError(\"Failed to create account.\");\n    }\n  }\n  return (\n    <Container className=\"min-vh-100 mt-5\">\n      <h1>Register</h1>\n      {error && <Alert variant=\"danger\">{error}</Alert>}\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"formRegisterName\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter your name\"\n            ref={nameRef}\n            required\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formRegisterEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            ref={emailRef}\n            required\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formRegisterPassword1\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            ref={passwordRef}\n            required\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formRegisterPassword2\">\n          <Form.Label>Re-enter Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            ref={passwordConfirmRef}\n          />\n        </Form.Group>\n\n        <hr />\n\n        <Form.Group id=\"street\">\n          <Form.Label>Street Address</Form.Label>\n          <Form.Control placeholder={\"123 Main St.\"} ref={streetRef} required />\n        </Form.Group>\n\n        <Form.Group id=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control placeholder={\"Somewhere\"} ref={cityRef} required />\n        </Form.Group>\n\n        <Form.Group id=\"province\">\n          <Form.Label>Province</Form.Label>\n          <Form.Control\n            as=\"select\"\n            defaultValue={\"Choose...\"}\n            ref={provinceRef}\n            required\n          >\n            <option disabled>Choose...</option>\n            <option>Alberta</option>\n            <option>British Coloumbia</option>\n            <option>Manitoba</option>\n            <option>New Brunswick</option>\n            <option>Newfoundland and Labrador</option>\n            <option>Nova Scotia</option>\n            <option>Ontario</option>\n            <option>Prince Edward Island</option>\n            <option>Quebec</option>\n            <option>Saskatechewan</option>\n            <option>Northwest Territories</option>\n            <option>Nunavut</option>\n            <option>Yukon</option>\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group id=\"postalCode\">\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control placeholder={\"A1B 2C3\"} ref={postalCodeRef} required />\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n      <div className=\"div mt-2\">\n        Already have an account? <Link to=\"/login\">Login.</Link>\n      </div>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}