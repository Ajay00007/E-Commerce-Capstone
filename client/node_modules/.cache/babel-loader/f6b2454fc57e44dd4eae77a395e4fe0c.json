{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documents/GithubRepos/Group_06/client/src/components/AdminRoute.js\";\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nexport default function AdminRoute({\n  component: Component,\n  ...rest\n}) {\n  const {\n    isAdmin\n  } = useAuth();\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      return isAdmin ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 26\n        }\n      })) : /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 53\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"sources":["/home/andre/Documents/GithubRepos/Group_06/client/src/components/AdminRoute.js"],"names":["React","Redirect","Route","useAuth","AdminRoute","component","Component","rest","isAdmin","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,yBAAxB;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAApB,EAAuD;AACpE,QAAM;AAAEC,IAAAA;AAAF,MAAcL,OAAO,EAA3B;AACA,sBACE,oBAAC,KAAD,oBACMI,IADN;AAEE,IAAA,MAAM,EAAGE,KAAD,IAAW;AACjB,aAAOD,OAAO,gBAAG,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH,gBAA8B,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5C;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAQD","sourcesContent":["import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\nexport default function AdminRoute({ component: Component, ...rest }) {\n  const { isAdmin } = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return isAdmin ? <Component {...props} /> : <Redirect to=\"/\" />;\n      }}\n    ></Route>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}