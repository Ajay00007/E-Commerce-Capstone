{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documents/GithubRepos/Group_06/client/src/pages/Products.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Card, Container, ListGroup } from \"react-bootstrap\";\nimport { APIpaths } from \"../API\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport PaginationNav from \"../components/PaginationNav\";\nimport styles from \"./Products.module.css\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nexport default function Products() {\n  const totalPages = useRef(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [nextPage, setNextPage] = useState(null);\n  const [prevPage, setPrevPage] = useState(null);\n  const [paginatedData, setPaginatedData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    handleGetData(currentPage);\n  }, [currentPage]);\n\n  async function handleGetData(pageToGet = 1, limitToGet = 12) {\n    try {\n      const results = await axios.get(`${APIpaths.getAllItems}?page=${pageToGet.toString()}&limit=${limitToGet}`);\n      setPaginatedData(results.data);\n\n      if (results.data.next) {\n        setNextPage(results.data.next.page);\n      } else {\n        setNextPage(null);\n      }\n\n      if (results.data.previous) {\n        setPrevPage(results.data.previous.page);\n      } else {\n        setPrevPage(null);\n      }\n\n      if (results.data.total.pages !== totalPages.current) {\n        totalPages.current = results.data.total.pages;\n      }\n\n      setLoading(false);\n    } catch (error) {\n      return console.log(error);\n    }\n  }\n\n  function handleGetNextPage() {\n    if (nextPage !== null) {\n      setCurrentPage(nextPage);\n    } else {\n      return;\n    }\n  }\n\n  function handleGetPreviousPage() {\n    if (prevPage !== null) {\n      setCurrentPage(prevPage);\n    } else {\n      return;\n    }\n  }\n\n  function handleGoToPage(pageNum) {\n    if (currentPage <= totalPages.current && pageNum > 0) {\n      setCurrentPage(pageNum);\n    } else {\n      return;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"min-vh-100 mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"Products\"), /*#__PURE__*/React.createElement(Container, {\n    className: styles.rowFlex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, !loading && paginatedData ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Products are displayed here.\") : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"No content to display.\")), totalPages.current > 1 ? /*#__PURE__*/React.createElement(PaginationNav, {\n    totalPages: totalPages.current,\n    prevPage: prevPage,\n    nextPage: nextPage,\n    currentPage: currentPage,\n    handleGetNextPage: handleGetNextPage,\n    handleGetPreviousPage: handleGetPreviousPage,\n    handleGoToPage: handleGoToPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }) : null);\n}","map":{"version":3,"sources":["/home/andre/Documents/GithubRepos/Group_06/client/src/pages/Products.js"],"names":["React","useEffect","useRef","useState","Card","Container","ListGroup","APIpaths","axios","Link","PaginationNav","styles","LoadingSpinner","Products","totalPages","currentPage","setCurrentPage","nextPage","setNextPage","prevPage","setPrevPage","paginatedData","setPaginatedData","loading","setLoading","handleGetData","pageToGet","limitToGet","results","get","getAllItems","toString","data","next","page","previous","total","pages","current","error","console","log","handleGetNextPage","handleGetPreviousPage","handleGoToPage","pageNum","rowFlex"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Card, Container, ListGroup } from \"react-bootstrap\";\nimport { APIpaths } from \"../API\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport PaginationNav from \"../components/PaginationNav\";\nimport styles from \"./Products.module.css\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nexport default function Products() {\n  const totalPages = useRef(null);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [nextPage, setNextPage] = useState(null);\n  const [prevPage, setPrevPage] = useState(null);\n\n  const [paginatedData, setPaginatedData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    handleGetData(currentPage);\n  }, [currentPage]);\n\n  async function handleGetData(pageToGet = 1, limitToGet = 12) {\n    try {\n      const results = await axios.get(\n        `${\n          APIpaths.getAllItems\n        }?page=${pageToGet.toString()}&limit=${limitToGet}`\n      );\n\n      setPaginatedData(results.data);\n\n      if (results.data.next) {\n        setNextPage(results.data.next.page);\n      } else {\n        setNextPage(null);\n      }\n\n      if (results.data.previous) {\n        setPrevPage(results.data.previous.page);\n      } else {\n        setPrevPage(null);\n      }\n\n      if (results.data.total.pages !== totalPages.current) {\n        totalPages.current = results.data.total.pages;\n      }\n\n      setLoading(false);\n    } catch (error) {\n      return console.log(error);\n    }\n  }\n\n  function handleGetNextPage() {\n    if (nextPage !== null) {\n      setCurrentPage(nextPage);\n    } else {\n      return;\n    }\n  }\n\n  function handleGetPreviousPage() {\n    if (prevPage !== null) {\n      setCurrentPage(prevPage);\n    } else {\n      return;\n    }\n  }\n\n  function handleGoToPage(pageNum) {\n    if (currentPage <= totalPages.current && pageNum > 0) {\n      setCurrentPage(pageNum);\n    } else {\n      return;\n    }\n  }\n\n  return (\n    <Container className=\"min-vh-100 mt-5\">\n      <h1>Products</h1>\n\n      <Container className={styles.rowFlex}>\n        {/* {loading ? <LoadingSpinner /> : null} */}\n        {!loading && paginatedData ? (\n          <p>Products are displayed here.</p>\n        ) : (\n          <p>No content to display.</p>\n        )}\n      </Container>\n\n      {totalPages.current > 1 ? (\n        <PaginationNav\n          totalPages={totalPages.current}\n          prevPage={prevPage}\n          nextPage={nextPage}\n          currentPage={currentPage}\n          handleGetNextPage={handleGetNextPage}\n          handleGetPreviousPage={handleGetPreviousPage}\n          handleGoToPage={handleGoToPage}\n        />\n      ) : null}\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}