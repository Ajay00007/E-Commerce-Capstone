{"ast":null,"code":"import Chart from\"chart.js\";import React,{useEffect}from\"react\";import{Container,Table}from\"react-bootstrap\";var SALES_DATA=[{month:\"Janurary\",salesVolume:65,netChange:\"+5\"},{month:\"February\",salesVolume:59,netChange:\"-6\"},{month:\"March\",salesVolume:80,netChange:\"+21\"},{month:\"April\",salesVolume:81,netChange:\"+1\"},{month:\"May\",salesVolume:56,netChange:\"-25\"},{month:\"June\",salesVolume:55,netChange:\"-1\"},{month:\"July\",salesVolume:40,netChange:\"-15\"}];export default function DashboardSales(){useEffect(function(){drawChart();});function retunLabels(data){var arrayOfLabels=[];data.forEach(function(point){arrayOfLabels.push(point.month);});return arrayOfLabels;}function returnDataPoints(data){var arrayOfPoints=[];data.forEach(function(point){arrayOfPoints.push(point.salesVolume);});return arrayOfPoints;}function drawChart(){var ctx=document.getElementById(\"monthlySales\");new Chart(ctx,{type:\"line\",data:{labels:retunLabels(SALES_DATA),datasets:[{label:\"Monthly Sales\",data:returnDataPoints(SALES_DATA),fill:false,borderColor:\"rgb(75, 192, 192)\",lineTension:0}]},options:{}});}return/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"h2\",{className:\"text-center\"},\"Recent Monthly Sales\"),/*#__PURE__*/React.createElement(\"canvas\",{id:\"monthlySales\"}),/*#__PURE__*/React.createElement(Table,{responsive:true,striped:true,bordered:true,hover:true,size:\"sm\",className:\"mt-4\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Month\"),/*#__PURE__*/React.createElement(\"th\",null,\"Total Sales Volume\"),/*#__PURE__*/React.createElement(\"th\",null,\"Net Change\"))),/*#__PURE__*/React.createElement(\"tbody\",null,SALES_DATA.map(function(month,idx){return/*#__PURE__*/React.createElement(\"tr\",{key:idx},/*#__PURE__*/React.createElement(\"td\",null,month.month),/*#__PURE__*/React.createElement(\"td\",null,month.salesVolume),/*#__PURE__*/React.createElement(\"td\",null,month.netChange));}))));}","map":{"version":3,"sources":["/home/andre/Documents/GithubRepos/Group_06/client/src/components/DashboardSales.js"],"names":["Chart","React","useEffect","Container","Table","SALES_DATA","month","salesVolume","netChange","DashboardSales","drawChart","retunLabels","data","arrayOfLabels","forEach","point","push","returnDataPoints","arrayOfPoints","ctx","document","getElementById","type","labels","datasets","label","fill","borderColor","lineTension","options","map","idx"],"mappings":"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","sourcesContent":["import Chart from \"chart.js\";\nimport React, { useEffect } from \"react\";\nimport { Container, Table } from \"react-bootstrap\";\n\nconst SALES_DATA = [\n  {\n    month: \"Janurary\",\n    salesVolume: 65,\n    netChange: \"+5\",\n  },\n  {\n    month: \"February\",\n    salesVolume: 59,\n    netChange: \"-6\",\n  },\n  {\n    month: \"March\",\n    salesVolume: 80,\n    netChange: \"+21\",\n  },\n  {\n    month: \"April\",\n    salesVolume: 81,\n    netChange: \"+1\",\n  },\n  {\n    month: \"May\",\n    salesVolume: 56,\n    netChange: \"-25\",\n  },\n  {\n    month: \"June\",\n    salesVolume: 55,\n    netChange: \"-1\",\n  },\n  {\n    month: \"July\",\n    salesVolume: 40,\n    netChange: \"-15\",\n  },\n];\n\nexport default function DashboardSales() {\n  useEffect(() => {\n    drawChart();\n  });\n\n  function retunLabels(data) {\n    let arrayOfLabels = [];\n\n    data.forEach((point) => {\n      arrayOfLabels.push(point.month);\n    });\n\n    return arrayOfLabels;\n  }\n\n  function returnDataPoints(data) {\n    let arrayOfPoints = [];\n\n    data.forEach((point) => {\n      arrayOfPoints.push(point.salesVolume);\n    });\n\n    return arrayOfPoints;\n  }\n\n  function drawChart() {\n    const ctx = document.getElementById(\"monthlySales\");\n    new Chart(ctx, {\n      type: \"line\",\n      data: {\n        labels: retunLabels(SALES_DATA),\n        datasets: [\n          {\n            label: \"Monthly Sales\",\n            data: returnDataPoints(SALES_DATA),\n            fill: false,\n            borderColor: \"rgb(75, 192, 192)\",\n            lineTension: 0,\n          },\n        ],\n      },\n      options: {},\n    });\n  }\n  return (\n    <Container>\n      <h2 className=\"text-center\">Recent Monthly Sales</h2>\n      <canvas id=\"monthlySales\"></canvas>\n      <Table responsive striped bordered hover size=\"sm\" className=\"mt-4\">\n        <thead>\n          <tr>\n            <th>Month</th>\n            <th>Total Sales Volume</th>\n            <th>Net Change</th>\n          </tr>\n        </thead>\n        <tbody>\n          {SALES_DATA.map((month, idx) => {\n            return (\n              <tr key={idx}>\n                <td>{month.month}</td>\n                <td>{month.salesVolume}</td>\n                <td>{month.netChange}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}