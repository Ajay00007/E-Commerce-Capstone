{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documents/GithubRepos/Group_06/client/src/contexts/AuthContext.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { APIpaths } from \"../API\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nconst AuthContext = React.createContext();\nexport function useAuth() {\n  return useContext(AuthContext);\n}\nexport function AuthProvider({\n  children\n}) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n  const [authToken, setAuthToken] = useLocalStorage(\"auth-token\", \"\");\n\n  async function register(name, email, password) {\n    const res = await axios.post(APIpaths.registerUser, {\n      name,\n      email,\n      password\n    });\n    setCurrentUser(res.data.user);\n    setAuthToken(res.data.token);\n  }\n\n  async function login(email, password) {\n    const res = await axios.post(APIpaths.loginUser, {\n      email,\n      password\n    });\n    setCurrentUser(res.data.user);\n    setAuthToken(res.data.token);\n  }\n\n  function logout() {\n    setCurrentUser(undefined);\n    setAuthToken(\"\");\n  }\n\n  async function getUserFromToken(tokenValue) {\n    const res = await axios.get(APIpaths.getUser, {\n      headers: {\n        \"x-auth-token\": tokenValue\n      }\n    });\n    console.log(res.data);\n    setCurrentUser(res.data);\n  }\n\n  useEffect(() => {\n    // if (authToken !== \"\") getUserFromToken(authToken);\n    setCurrentUser(currentUser);\n    setLoading(false);\n  }, [authToken, currentUser]);\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, !loading && children);\n}","map":{"version":3,"sources":["/home/andre/Documents/GithubRepos/Group_06/client/src/contexts/AuthContext.js"],"names":["React","useContext","useEffect","useState","axios","APIpaths","useLocalStorage","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","authToken","setAuthToken","register","name","email","password","res","post","registerUser","data","user","token","login","loginUser","logout","undefined","getUserFromToken","tokenValue","get","getUser","headers","console","log","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AAEA,MAAMC,WAAW,GAAGP,KAAK,CAACQ,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAOR,UAAU,CAACM,WAAD,CAAjB;AACD;AAED,OAAO,SAASG,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AACzC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4BX,eAAe,CAAC,YAAD,EAAe,EAAf,CAAjD;;AAEA,iBAAeY,QAAf,CAAwBC,IAAxB,EAA8BC,KAA9B,EAAqCC,QAArC,EAA+C;AAC7C,UAAMC,GAAG,GAAG,MAAMlB,KAAK,CAACmB,IAAN,CAAWlB,QAAQ,CAACmB,YAApB,EAAkC;AAClDL,MAAAA,IADkD;AAElDC,MAAAA,KAFkD;AAGlDC,MAAAA;AAHkD,KAAlC,CAAlB;AAMAR,IAAAA,cAAc,CAACS,GAAG,CAACG,IAAJ,CAASC,IAAV,CAAd;AACAT,IAAAA,YAAY,CAACK,GAAG,CAACG,IAAJ,CAASE,KAAV,CAAZ;AACD;;AAED,iBAAeC,KAAf,CAAqBR,KAArB,EAA4BC,QAA5B,EAAsC;AACpC,UAAMC,GAAG,GAAG,MAAMlB,KAAK,CAACmB,IAAN,CAAWlB,QAAQ,CAACwB,SAApB,EAA+B;AAC/CT,MAAAA,KAD+C;AAE/CC,MAAAA;AAF+C,KAA/B,CAAlB;AAKAR,IAAAA,cAAc,CAACS,GAAG,CAACG,IAAJ,CAASC,IAAV,CAAd;AACAT,IAAAA,YAAY,CAACK,GAAG,CAACG,IAAJ,CAASE,KAAV,CAAZ;AACD;;AAED,WAASG,MAAT,GAAkB;AAChBjB,IAAAA,cAAc,CAACkB,SAAD,CAAd;AACAd,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;;AAED,iBAAee,gBAAf,CAAgCC,UAAhC,EAA4C;AAC1C,UAAMX,GAAG,GAAG,MAAMlB,KAAK,CAAC8B,GAAN,CAAU7B,QAAQ,CAAC8B,OAAnB,EAA4B;AAC5CC,MAAAA,OAAO,EAAE;AAAE,wBAAgBH;AAAlB;AADmC,KAA5B,CAAlB;AAIAI,IAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAG,CAACG,IAAhB;AAEAZ,IAAAA,cAAc,CAACS,GAAG,CAACG,IAAL,CAAd;AACD;;AAEDvB,EAAAA,SAAS,CAAC,MAAM;AACd;AACAW,IAAAA,cAAc,CAACD,WAAD,CAAd;AACAG,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAJQ,EAIN,CAACC,SAAD,EAAYJ,WAAZ,CAJM,CAAT;AAMA,QAAM2B,KAAK,GAAG;AACZ3B,IAAAA,WADY;AAEZgB,IAAAA,KAFY;AAGZV,IAAAA,QAHY;AAIZY,IAAAA;AAJY,GAAd;AAOA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAES,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACzB,OAAD,IAAYH,QADf,CADF;AAKD","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { APIpaths } from \"../API\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  const [authToken, setAuthToken] = useLocalStorage(\"auth-token\", \"\");\n\n  async function register(name, email, password) {\n    const res = await axios.post(APIpaths.registerUser, {\n      name,\n      email,\n      password,\n    });\n\n    setCurrentUser(res.data.user);\n    setAuthToken(res.data.token);\n  }\n\n  async function login(email, password) {\n    const res = await axios.post(APIpaths.loginUser, {\n      email,\n      password,\n    });\n\n    setCurrentUser(res.data.user);\n    setAuthToken(res.data.token);\n  }\n\n  function logout() {\n    setCurrentUser(undefined);\n    setAuthToken(\"\");\n  }\n\n  async function getUserFromToken(tokenValue) {\n    const res = await axios.get(APIpaths.getUser, {\n      headers: { \"x-auth-token\": tokenValue },\n    });\n\n    console.log(res.data);\n\n    setCurrentUser(res.data);\n  }\n\n  useEffect(() => {\n    // if (authToken !== \"\") getUserFromToken(authToken);\n    setCurrentUser(currentUser);\n    setLoading(false);\n  }, [authToken, currentUser]);\n\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}