{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documents/GithubRepos/Group_06/client/src/pages/Search.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Card, Col, Container, ListGroup, Row } from \"react-bootstrap\";\nimport { APIpaths } from \"../API\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport PaginationNav from \"../components/PaginationNav\";\nimport styles from \"./Products.module.css\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nexport default function Search({\n  searchQuery\n}) {\n  const totalPages = useRef(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [nextPage, setNextPage] = useState(null);\n  const [prevPage, setPrevPage] = useState(null);\n  const [products, setProducts] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    handleGetData(searchQuery);\n  }, [searchQuery]);\n\n  async function handleGetData(searchQuery) {\n    try {\n      const results = await axios.get(`${APIpaths.getAllItems}?q=${searchQuery}`);\n      setProducts(results.data);\n\n      if (results.data.next) {\n        setNextPage(results.data.next.page);\n      } else {\n        setNextPage(null);\n      }\n\n      if (results.data.previous) {\n        setPrevPage(results.data.previous.page);\n      } else {\n        setPrevPage(null);\n      }\n\n      if (results.data.total.pages !== totalPages.current) {\n        totalPages.current = results.data.total.pages;\n      }\n\n      setLoading(false);\n    } catch (error) {\n      return console.log(error);\n    }\n  }\n\n  function handleGetNextPage() {\n    if (nextPage !== null) {\n      setCurrentPage(nextPage);\n    } else {\n      return;\n    }\n  }\n\n  function handleGetPreviousPage() {\n    if (prevPage !== null) {\n      setCurrentPage(prevPage);\n    } else {\n      return;\n    }\n  }\n\n  function handleGoToPage(pageNum) {\n    if (currentPage <= totalPages.current && pageNum > 0) {\n      setCurrentPage(pageNum);\n    } else {\n      return;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"min-vh-100 mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Products\"), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: styles.rowFlex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }) : products !== null ? products.results.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: index,\n      className: styles.cardStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      src: item.picture,\n      alt: \"\",\n      loading: \"lazy\",\n      className: styles.cardImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, item.productName), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, item.manufacturer), /*#__PURE__*/React.createElement(ListGroup, {\n      variant: \"flush\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 23\n      }\n    }, \"Rating: \", item.rating), /*#__PURE__*/React.createElement(ListGroup.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 23\n      }\n    }, \"Price: $\", item.price.toFixed(2))), /*#__PURE__*/React.createElement(Link, {\n      to: `/product/${item._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, \"View\")));\n  }) : /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, \"No content to display.\")))), totalPages.current > 1 ? /*#__PURE__*/React.createElement(PaginationNav, {\n    totalPages: totalPages.current,\n    prevPage: prevPage,\n    nextPage: nextPage,\n    currentPage: currentPage,\n    handleGetNextPage: handleGetNextPage,\n    handleGetPreviousPage: handleGetPreviousPage,\n    handleGoToPage: handleGoToPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }) : null);\n}","map":{"version":3,"sources":["/home/andre/Documents/GithubRepos/Group_06/client/src/pages/Search.js"],"names":["React","useEffect","useRef","useState","Card","Col","Container","ListGroup","Row","APIpaths","axios","Link","PaginationNav","styles","LoadingSpinner","Search","searchQuery","totalPages","currentPage","setCurrentPage","nextPage","setNextPage","prevPage","setPrevPage","products","setProducts","loading","setLoading","handleGetData","results","get","getAllItems","data","next","page","previous","total","pages","current","error","console","log","handleGetNextPage","handleGetPreviousPage","handleGoToPage","pageNum","rowFlex","map","item","index","cardStyle","picture","cardImage","productName","manufacturer","rating","price","toFixed","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Card, Col, Container, ListGroup, Row } from \"react-bootstrap\";\nimport { APIpaths } from \"../API\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport PaginationNav from \"../components/PaginationNav\";\nimport styles from \"./Products.module.css\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nexport default function Search({ searchQuery }) {\n  const totalPages = useRef(null);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [nextPage, setNextPage] = useState(null);\n  const [prevPage, setPrevPage] = useState(null);\n\n  const [products, setProducts] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    handleGetData(searchQuery);\n  }, [searchQuery]);\n\n  async function handleGetData(searchQuery) {\n    try {\n      const results = await axios.get(\n        `${APIpaths.getAllItems}?q=${searchQuery}`\n      );\n\n      setProducts(results.data);\n\n      if (results.data.next) {\n        setNextPage(results.data.next.page);\n      } else {\n        setNextPage(null);\n      }\n\n      if (results.data.previous) {\n        setPrevPage(results.data.previous.page);\n      } else {\n        setPrevPage(null);\n      }\n\n      if (results.data.total.pages !== totalPages.current) {\n        totalPages.current = results.data.total.pages;\n      }\n\n      setLoading(false);\n    } catch (error) {\n      return console.log(error);\n    }\n  }\n\n  function handleGetNextPage() {\n    if (nextPage !== null) {\n      setCurrentPage(nextPage);\n    } else {\n      return;\n    }\n  }\n\n  function handleGetPreviousPage() {\n    if (prevPage !== null) {\n      setCurrentPage(prevPage);\n    } else {\n      return;\n    }\n  }\n\n  function handleGoToPage(pageNum) {\n    if (currentPage <= totalPages.current && pageNum > 0) {\n      setCurrentPage(pageNum);\n    } else {\n      return;\n    }\n  }\n\n  return (\n    <Container className=\"min-vh-100 mt-5\">\n      <h1>Products</h1>\n\n      <Container>\n        <Row className={styles.rowFlex}>\n          {loading ? (\n            <LoadingSpinner />\n          ) : products !== null ? (\n            products.results.map((item, index) => {\n              return (\n                <Card key={index} className={styles.cardStyle}>\n                  <Card.Img\n                    src={item.picture}\n                    alt=\"\"\n                    loading=\"lazy\"\n                    className={styles.cardImage}\n                  />\n                  <Card.Body>\n                    <Card.Title>{item.productName}</Card.Title>\n                    <Card.Subtitle>{item.manufacturer}</Card.Subtitle>\n                    <ListGroup variant=\"flush\">\n                      <ListGroup.Item>Rating: {item.rating}</ListGroup.Item>\n                      <ListGroup.Item>\n                        Price: ${item.price.toFixed(2)}\n                      </ListGroup.Item>\n                    </ListGroup>\n                    <Link to={`/product/${item._id}`}>View</Link>\n                  </Card.Body>\n                </Card>\n              );\n            })\n          ) : (\n            <Col>\n              <p>No content to display.</p>\n            </Col>\n          )}\n        </Row>\n      </Container>\n\n      {totalPages.current > 1 ? (\n        <PaginationNav\n          totalPages={totalPages.current}\n          prevPage={prevPage}\n          nextPage={nextPage}\n          currentPage={currentPage}\n          handleGetNextPage={handleGetNextPage}\n          handleGetPreviousPage={handleGetPreviousPage}\n          handleGoToPage={handleGoToPage}\n        />\n      ) : null}\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}