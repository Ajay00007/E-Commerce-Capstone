{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documents/GithubRepos/Group_06/client/src/contexts/AuthContext.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { APIpaths } from \"../API\";\nconst AuthContext = React.createContext();\nexport function useAuth() {\n  return useContext(AuthContext);\n}\nexport function AuthProvider({\n  children\n}) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  async function register(name, email, password) {\n    const res = await axios.post(APIpaths.registerUser, {\n      name,\n      email,\n      password\n    });\n    setCurrentUser(res.data.user);\n    return res;\n  }\n\n  async function login(email, password) {\n    const res = await axios.post(APIpaths.loginUser, {\n      email,\n      password\n    });\n    setCurrentUser(res.data.user);\n    return res;\n  }\n\n  function logout() {\n    // TODO: clear session/storage credentials\n    setCurrentUser(undefined);\n    return;\n  }\n\n  useEffect(() => {\n    setCurrentUser(currentUser);\n    setLoading(false);\n  }, [currentUser]);\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, !loading && children);\n}","map":{"version":3,"sources":["/home/andre/Documents/GithubRepos/Group_06/client/src/contexts/AuthContext.js"],"names":["React","useContext","useEffect","useState","axios","APIpaths","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","register","name","email","password","res","post","registerUser","data","user","login","loginUser","logout","undefined","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,QAAzB;AAEA,MAAMC,WAAW,GAAGN,KAAK,CAACO,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAOP,UAAU,CAACK,WAAD,CAAjB;AACD;AAED,OAAO,SAASG,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AACzC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;;AAEA,iBAAeY,QAAf,CAAwBC,IAAxB,EAA8BC,KAA9B,EAAqCC,QAArC,EAA+C;AAC7C,UAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAWf,QAAQ,CAACgB,YAApB,EAAkC;AAClDL,MAAAA,IADkD;AAElDC,MAAAA,KAFkD;AAGlDC,MAAAA;AAHkD,KAAlC,CAAlB;AAMAN,IAAAA,cAAc,CAACO,GAAG,CAACG,IAAJ,CAASC,IAAV,CAAd;AAEA,WAAOJ,GAAP;AACD;;AAED,iBAAeK,KAAf,CAAqBP,KAArB,EAA4BC,QAA5B,EAAsC;AACpC,UAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAWf,QAAQ,CAACoB,SAApB,EAA+B;AAC/CR,MAAAA,KAD+C;AAE/CC,MAAAA;AAF+C,KAA/B,CAAlB;AAKAN,IAAAA,cAAc,CAACO,GAAG,CAACG,IAAJ,CAASC,IAAV,CAAd;AACA,WAAOJ,GAAP;AACD;;AAED,WAASO,MAAT,GAAkB;AAChB;AACAd,IAAAA,cAAc,CAACe,SAAD,CAAd;AACA;AACD;;AAEDzB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,cAAc,CAACD,WAAD,CAAd;AACAG,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAHQ,EAGN,CAACH,WAAD,CAHM,CAAT;AAKA,QAAMiB,KAAK,GAAG;AACZjB,IAAAA,WADY;AAEZa,IAAAA,KAFY;AAGZT,IAAAA,QAHY;AAIZW,IAAAA;AAJY,GAAd;AAOA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACf,OAAD,IAAYH,QADf,CADF;AAKD","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { APIpaths } from \"../API\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  async function register(name, email, password) {\n    const res = await axios.post(APIpaths.registerUser, {\n      name,\n      email,\n      password,\n    });\n\n    setCurrentUser(res.data.user);\n\n    return res;\n  }\n\n  async function login(email, password) {\n    const res = await axios.post(APIpaths.loginUser, {\n      email,\n      password,\n    });\n\n    setCurrentUser(res.data.user);\n    return res;\n  }\n\n  function logout() {\n    // TODO: clear session/storage credentials\n    setCurrentUser(undefined);\n    return;\n  }\n\n  useEffect(() => {\n    setCurrentUser(currentUser);\n    setLoading(false);\n  }, [currentUser]);\n\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}